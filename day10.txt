edit preference font에서 글씨 크기 등 변경 가능

create schema

schema에 test1이라는 이름의 db만들고
test1을 펼쳐보면
tables
views
stored procedures
functions 있음
table에서 create table로 새 table생성 가능

테이블을 만들 때 해당 열에 어떤 값을 저장할지 지정해서 만들어야 함.

자료형 : 저장하는 값이 어떤 값인지를 의미함.
(자료의 형태) 저장하는 값이 문자인지 숫자인지 무엇인지를 의미시킬 때 자료형이라는 것을 사용하게 됨.
#자료형의 종류
 - int : 숫자
 - char : 문자

#select * from aaa; <--- aaa라는 테이블에 모든 데이터를 출력하겠다.

#use test1; <--- test1이라는 데이터베이스를 선택하겠다

#select 쿼리를 전송할 때, 데이터베이스가 반드시 선택되어야 함..


schema에서 굵은 글씨로 표현되면 use가 된 database라는 의미임.

#select * from test1.aaa; <--- test1이라는 데이터베이스에 있는 aaa라는 테이블에 모든 데이터를 출력

#use를 하지 않아도 select쿼리를 전송할 때 데이터베이스를 쿼리에서 직접 지정하면 use없이 select 할 수 있음.

#하나의 데이터베이스를 대상으로 select를 여러번 작성해서 전송해야할 때는 use를 안하면 select할 때 마다 데이터베이스를 지정해야 해서 굉장히 번거로워진다.

#번개모양 아이콘(왼쪽)
---> 위에서부터 sql에디터에 있는 쿼리를 하나씩 다 실행시킴.

#번개모양 아이콘(오른쪽)
---> 커서가 있는 행의 쿼리를 실행시킴.

Workbench SQL Editer 단축키
 - Ctrl + Enter : 커서가 있는 쿼리를 전송(=번개모양 아이콘(오른쪽))
 - Ctrl + Shift + Enter : SQL Editer에 작성된 모든 쿼리를 위에서부터 한개한개 전부 전송(=번개모양 아이콘(왼쪽))	
#에디터에 작성한 쿼리 일괄 전송(Ctrl + Shift + Enter)할 때, 중간에 쿼리가 에러가 발생하면 다음 쿼리를 전송하지 않음.

#쿼리는 대소문자 구별 안함.'



SCHEMAS에서 테이블에서 selct row로 쿼리 보낼 수도 있음.


alter table은 테이블에 설정을 변경할 때 쓰는 메뉴

alter table

#테이블을 만들 때 컬럼에 자료형을 CHAR로 지정했을 때 글자 제한을 생략하면 CHAR는 1글자로 기본 값으로 지정됨.

#INT 자료형이 INT(11) 이렇게 설정하면 숫자 11개까지 저장가능하게 하는 것이 아님.
11 ---> 11Bit

INT로 저장하는 컬럼에 사이즈에 따라 저장하는 수의 범위에 크기가 달라짐.

#CHAR자료형 글자 제한을 5글자로 제한하면 그 컬럼에 사이즈는 10Byte가 됨.. 1글자당 2Byte임


만약 CHAR 글자 제한을 1000글자로 했을 때... 예를들어 게시글에 내용을 데이터베이스에 저장하기 위해 사이즈를 큼직큼직하게 설정했음...

실제 컬럼에 저장할 때 10글자만 저장하게 되면.. 990글자를 저장할 수 있는 1980Byte가 낭비되게 됨.

#불필요하게 CHAR의 글자 제한을 많이 잡는다면 용량낭비가 높아짐...
실제로 저장할 값이 무엇이냐에 따라 사이즈를 고려해서 적당하게 설정해야함.. 최대한 낭비가 적게..

Workbench에서 Alter Table 메뉴를 
	테이블의 설정을 확인하기 위해서도 들어감.

Workbench : Ctrl + w --> 열려있는 창을 닫는 단축키

#Workbench 한글
인코딩 : 문자를 어떻게 표현할지를 결정하는 것
인코딩에 종류가 다양한데 mysql에 기본 인코딩이 라틴으로 설정되어 있음

#UTF8 인코딩 : 전세계 모든 문자를 표현할 수 있는 방식

alter table aaa convert to character set UTF8;	---> aaa라는 테이블에 인코딩을 UTF8로 변경하는 쿼리

alter table을 매번 해주기 귀찮으므로
#데이터베이스의 기본 인코딩을 UTF8로 설정
#데이터베이스에서 만들어지는 모든테이블에 인코딩이 기본적으로 UTF8로 설정된다.
alter schema -> Collation : utf8 - default collation

#데이터베이스에 기본 인코딩을 UTF8로 변경했을 때 이미 만들어져 있는 테이블에 인코딩은 변경되지 않는다.
앞으로 만드는 테이블에 인코딩이 UTF8로 설정된다.

#데이터베이스가 다르다면 테이블에 이름이 중복되어도 됨. 하지만 동일한 데이터베이스에 이름이 동일한 테이블이 존재할 수는 없음...

#Server 기본 인코딩 지정
매 db마다 인코딩을 utf8로 지정해주기 귀찮음
>>지정된 인코딩으로 만드는 모든 db의 기본 인코딩이 설정됨.


PuTTY쓰는 이유 - 멀리있는 장비의 리눅스 명령어를 전송해서 원격관리를 하기 위함.
ex) 서버실의 장비를 PuTTY를 이용해서 사무실에서 접속해서 관리함.

Workbench쓰는 이유 - MySQL에 원격 접속하기 위함.
ex) 서버실의 MySQL에 내 사무실에서 Workbench를 이용해서 접속해서 관리함.






