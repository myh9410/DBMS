#SCP(Secure Copy) : SSH서비스를 통해서 파일을 업로드하거나 다운로드할 때.. 즉 파일을 전송할 때 사용하는 서비스.

# scp /root/korea root@100.100.100.120:/home
	내 운영체제에 있는 /root/korea라는 파일을 100.100.100.120에 /home 디렉터리로 root계정으로 접속	해서 전송하겠다.

# scp root@100.100.100.120:/root/aaa ./
	100.100.100.120에 /root/aaa라는 파일을 내 현재위치로 다운받겠다.

# SCP는 SSH 서비스를 기반으로 동작하는 것임
	따라서 장비에 SSHService를 중단시킨다면 SCP도 안된다.
	SCP는 SSH서비스를 이용하기 때문에 포트번호를 22번 그대로 SSH와 똑같은걸 사용함.

# 그래서 SCP도 리눅스를 설치하고 아무 설정도 안해도 기본적으로 사용할 수 있음.

물론 통신이 가능한 상태일 때...

#WinSCP라는 프로그램은 Windows용 SCP클라이언트 프로그램임...

#Workbench에서는 select 쿼리 행 제한을 기본적으로 1000행으로 제한이 되어 있음.

실제로 데이터가 100만행 존재해도 1000행까지만 보여줌.

#SQL 처리 시간은 성능 테스트할 때 계속 체크해야되는 사항...
얼마나 쿼리를 처리하는데 시간이 걸리는지를 체크할 때 사용함.

#처리 시간이 0.000Sec <--- 0.000초도 안걸렸다라는 의미.

#자료형

char - 문자를 저장
varchar - 문자를 저장

#데이터베이스에 1글자를 저장하기 위해서는 디스크에서 2Byte만큼을 사용해야 함.

#char 자료형으로 5글자로 글자 수 제한을 하면 그 컬럼은 몇 글자를 저장하건 10Byte만큼을 디스크에서 사용하게 됨.

#char 자료형은 글자제한을 1000글자로 만들고 실제 값을 저장할 때 5글자만 저장하면 995글자를 저장할 수 있는 공간이 낭비됨.

# varchar는 글자제한을 1000글자로 잡고 5글자를 저장하면, 11Byte만큼만 사용되어지게 됨.

#varchar는 linked list같은 느낌이고 char는 array list같은 느낌임.

#varchar로 10글자 저장하면 11Byte가 사용됨.
#varchar로 25글자 저장하면 51Byte가 사용됨.

#varchar는 저장하는 글자 수 에 따라 디스크 사이즈가 그에 맞게 할당 됨.

#char 자료형
 - 장점 : 
 - 단점 : 용량에 낭비를 가지고 올 수 있음.

#varchar 자료형
 - 장점 : 용량이 낭비되지 않음
 - 단점 : 데이터를 저장할 때 몇 글자인지 카운팅해서 데이터를 저장할 사이즈를 결정해야 함.
	  그래서 저장하는 성능이 떨어짐...(속도가 상대적으로 느리다.)

#char자료형은 저장하는 글자 수가 저장될 때마다 심하게 변동되지 않는 경우에 사용하게 됨.
ex) 주민번호, 우편번호, 전화번호, 사람이름 등

#varchar 자료형은 저장하는 글자 수가 저장될 때마다 심하게 변동되는 경우에 사용하게 됨..

ex) 게시판에 게시글의 본문, 배송 요청사항, 카톡 메시지 등등

#insert 쿼리는 테이블에 데이터를 저장할 때 사용하는 쿼리

#employees.employees employees(앞)라는 데이터베이스 안에 employees(뒤)라는 테이블


#insert into indexTBL select first_name,last_name,hire_date from employees.employees;
위의 쿼리는 employees라는 데이터베이스에 있는 employees라는 테이블에 first_name, last_name, hire_date라는 컬럼에 있는 값을 indexTBL로 복사시키겠다는 쿼리

#책에서는 목차를 통해 책에 내용을 빠르게 찾을 수 있게 목차를 기록해 놓게 됨.
>>목차가 없다면 찾는데 오랜 시간이 걸릴것임.

#인덱스 : 데이터베이스에 있는 테이블에 어느 데이터가 어디에 있는지를 목차를 만들어낼 때 사용함.
# 인덱스를 만드는 작업을 인덱싱한다라고하는데 인덱싱 작업을 통해 데이터를 찾아내는 속도를 향상시킬 수 있음. 즉, MySQL에 성능향상이 가능함.

#execution plan - Full Table Scan이라는 것은 지금 쿼리를 처리할 때 테이블에 있는 전체 데이터를 검색해서 처리했다!라는 의미

create index idx_indexTBL_firstName on indexTBL(first_name);
>>idx_indexTBL_firstName이라는 이름의 인덱스를 indexTBL이라는 테이블에 있는 first_name이라는 컬럼에 목차를 만들 수 있게 됨.